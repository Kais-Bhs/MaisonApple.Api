// <auto-generated />
using System;
using DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAO.Migrations
{
    [DbContext(typeof(MaisonAppleContext))]
    [Migration("20240625235607_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "IPHONE"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MAC"
                        },
                        new
                        {
                            Id = 3,
                            Name = "AppleWATCH"
                        });
                });

            modelBuilder.Entity("Entities.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int>("CommandStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("Entities.Favoris", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favoris");
                });

            modelBuilder.Entity("Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommandId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPrice")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("InitialPrice")
                        .HasColumnType("int");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CurrentPrice = 1250,
                            Description = "RAM: 2 Go\n*Stockage: 64 Go\n*Appareil photo: 12 MP\n*Écran: 4,7 pouces",
                            InitialPrice = 1250,
                            IsUsed = false,
                            Name = "iPhone 8",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CurrentPrice = 1625,
                            Description = "RAM: 3 Go\n*Stockage: 64 Go ou 256 Go\n*Appareil photo: Double 12 MP\n*Écran: 5,5 pouces",
                            InitialPrice = 1625,
                            IsUsed = false,
                            Name = "iPhone 8 Plus",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CurrentPrice = 2000,
                            Description = "RAM: 3 Go\n*Stockage: 64 Go, 256 Go, ou 512 Go\n*Appareil photo: Double 12 MP\n*Écran: 5,8 pouces",
                            InitialPrice = 2000,
                            IsUsed = false,
                            Name = "iPhone X",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CurrentPrice = 1750,
                            Description = "RAM: 3 Go\n*Stockage: 64 Go, 128 Go, ou 256 Go\n*Appareil photo: Simple 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 1750,
                            IsUsed = false,
                            Name = "iPhone XR",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CurrentPrice = 2250,
                            Description = "RAM: 4 Go\n*Stockage: 64 Go, 256 Go, ou 512 Go\n*Appareil photo: Double 12 MP\n*Écran: 5,8 pouces",
                            InitialPrice = 2250,
                            IsUsed = false,
                            Name = "iPhone XS",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CurrentPrice = 2500,
                            Description = "RAM: 4 Go\n*Stockage: 64 Go, 256 Go, ou 512 Go\n*Appareil photo: Double 12 MP\n*Écran: 6,5 pouces",
                            InitialPrice = 2500,
                            IsUsed = false,
                            Name = "iPhone XS Max",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CurrentPrice = 1875,
                            Description = "RAM: 4 Go\n*Stockage: 64 Go, 128 Go, ou 256 Go\n*Appareil photo: Double 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 1875,
                            IsUsed = false,
                            Name = "iPhone 11",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            CurrentPrice = 2500,
                            Description = "RAM: 4 Go ou 6 Go\n*Stockage: 64 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 5,8 pouces",
                            InitialPrice = 2500,
                            IsUsed = false,
                            Name = "iPhone 11 Pro",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            CurrentPrice = 2650,
                            Description = "RAM: 4 Go ou 6 Go\n*Stockage: 64 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,5 pouces",
                            InitialPrice = 2650,
                            IsUsed = false,
                            Name = "iPhone 11 Pro Max",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            CurrentPrice = 2000,
                            Description = "RAM: 4 Go\n*Stockage: 64 Go, 128 Go, ou 256 Go\n*Appareil photo: Double 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 2000,
                            IsUsed = false,
                            Name = "iPhone 12",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            CurrentPrice = 2750,
                            Description = "RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 2750,
                            IsUsed = false,
                            Name = "iPhone 12 Pro",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            CurrentPrice = 3000,
                            Description = "RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,7 pouces",
                            InitialPrice = 3000,
                            IsUsed = false,
                            Name = "iPhone 12 Pro Max",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            CurrentPrice = 2125,
                            Description = "RAM: 4 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Double 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 2125,
                            IsUsed = false,
                            Name = "iPhone 13",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            CurrentPrice = 2875,
                            Description = "RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 2875,
                            IsUsed = false,
                            Name = "iPhone 13 Pro",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            CurrentPrice = 3125,
                            Description = "RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,7 pouces",
                            InitialPrice = 3125,
                            IsUsed = false,
                            Name = "iPhone 13 Pro Max",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            CurrentPrice = 2497,
                            Description = "Processeur: Chip M1\n*RAM: 8 Go ou 16 Go\n*Stockage: 256 Go, 512 Go, ou 1 To\n*Écran: 13,3 pouces",
                            InitialPrice = 2497,
                            IsUsed = false,
                            Name = "MacBook Air",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            CurrentPrice = 3247,
                            Description = "Processeur: Chip M1 Pro ou M1 Max\n*RAM: 16 Go, 32 Go, ou 64 Go\n*Stockage: 256 Go, 512 Go, 1 To, 2 To, ou 4 To\n*Écran: 13,3 pouces ou 16 pouces",
                            InitialPrice = 3247,
                            IsUsed = false,
                            Name = "MacBook Pro",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            CurrentPrice = 997,
                            Description = "Processeur: S7\n*Écran: Always-On Retina LTPO OLED\n*Batterie: Jusqu'à 36 heures",
                            InitialPrice = 997,
                            IsUsed = false,
                            Name = "Apple Watch Series 7",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            CurrentPrice = 697,
                            Description = "Processeur: S5\n*Écran: Retina OLED\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 697,
                            IsUsed = false,
                            Name = "Apple Watch SE",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 3,
                            CurrentPrice = 422,
                            Description = "Processeur: S3\n*Écran: IPS LCD\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 422,
                            IsUsed = false,
                            Name = "Apple Watch Series 3",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            CurrentPrice = 1497,
                            Description = "Processeur: Chip M1\n*RAM: 8 Go ou 16 Go\n*Stockage: 256 Go, 512 Go, ou 1 To\n*Écran: Intégré de 7 pouces LED",
                            InitialPrice = 1497,
                            IsUsed = false,
                            Name = "Mac mini",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            CurrentPrice = 2747,
                            Description = "Processeur: Chip M1\n*RAM: 8 Go ou 16 Go\n*Stockage: 256 Go, 512 Go, ou 1 To\n*Écran: 21,5 pouces ou 27 pouces",
                            InitialPrice = 2747,
                            IsUsed = false,
                            Name = "iMac",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            CurrentPrice = 4997,
                            Description = "Processeur: Chip M1 Ultra ou M1 Max\n*RAM: 32 Go, 64 Go, ou 128 Go\n*Stockage: 512 Go, 1 To, 2 To, 4 To, ou 8 To\n*Écran: Intégré de 5,5 pouces Liquid Retina XDR",
                            InitialPrice = 4997,
                            IsUsed = false,
                            Name = "Mac Studio",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 2,
                            CurrentPrice = 7497,
                            Description = "Processeur: Chip M1 Pro ou M1 Max\n*RAM: 32 Go, 64 Go, ou 128 Go\n*Stockage: Personnalisable\n*Écran: Intégré de 5,5 pouces Liquid Retina XDR",
                            InitialPrice = 7497,
                            IsUsed = false,
                            Name = "Mac Pro",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            CurrentPrice = 3247,
                            Description = "Processeur: Chip M1\n*RAM: 8 Go ou 16 Go\n*Stockage: 256 Go, 512 Go, ou 1 To\n*Écran: 13,3 pouces",
                            InitialPrice = 3247,
                            IsUsed = false,
                            Name = "MacBook Pro 13 pouces",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            CurrentPrice = 4997,
                            Description = "Processeur: Chip M1 Pro ou M1 Max\n*RAM: 16 Go, 32 Go, ou 64 Go\n*Stockage: 512 Go, 1 To, 2 To, 4 To, ou 8 To\n*Écran: 14,2 pouces",
                            InitialPrice = 4997,
                            IsUsed = false,
                            Name = "MacBook Pro 14 pouces",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 2,
                            CurrentPrice = 6247,
                            Description = "Processeur: Chip M1 Pro ou M1 Max\n*RAM: 16 Go, 32 Go, ou 64 Go\n*Stockage: 512 Go, 1 To, 2 To, 4 To, ou 8 To\n*Écran: 16,2 pouces",
                            InitialPrice = 6247,
                            IsUsed = false,
                            Name = "MacBook Pro 16 pouces",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 2,
                            CurrentPrice = 2497,
                            Description = "Processeur: Chip M1\n*RAM: 8 Go ou 16 Go\n*Stockage: 256 Go, 512 Go, ou 1 To\n*Écran: 13,3 pouces",
                            InitialPrice = 2497,
                            IsUsed = false,
                            Name = "MacBook Air M1",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            CurrentPrice = 2997,
                            Description = "Processeur: Chip M2\n*RAM: 8 Go ou 16 Go\n*Stockage: 256 Go, 512 Go, ou 1 To\n*Écran: 13,6 pouces",
                            InitialPrice = 2997,
                            IsUsed = false,
                            Name = "MacBook Air M2",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 2,
                            CurrentPrice = 3747,
                            Description = "Processeur: Chip M2\n*RAM: 8 Go ou 16 Go\n*Stockage: 256 Go, 512 Go, ou 1 To\n*Écran: 13,3 pouces",
                            InitialPrice = 3747,
                            IsUsed = false,
                            Name = "MacBook Pro 13 pouces M2",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 3,
                            CurrentPrice = 997,
                            Description = "Processeur: S6\n*Écran: Always-On Retina LTPO OLED\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 997,
                            IsUsed = false,
                            Name = "Apple Watch Series 6",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 3,
                            CurrentPrice = 822,
                            Description = "Processeur: S5\n*Écran: Always-On Retina OLED\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 822,
                            IsUsed = false,
                            Name = "Apple Watch Series 5",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 3,
                            CurrentPrice = 622,
                            Description = "Processeur: S4\n*Écran: IPS LCD\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 622,
                            IsUsed = false,
                            Name = "Apple Watch Series 4",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 3,
                            CurrentPrice = 747,
                            Description = "Processeur: S3\n*Écran: IPS LCD\n*Batterie: Jusqu'à 18 heures\n*Cellulaire LTE",
                            InitialPrice = 747,
                            IsUsed = false,
                            Name = "Apple Watch Series 3 LTE",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 3,
                            CurrentPrice = 697,
                            Description = "Processeur: S5\n*Écran: Retina OLED\n*Batterie: Jusqu'à 30 heures",
                            InitialPrice = 697,
                            IsUsed = false,
                            Name = "Apple Watch SE (2ème génération)",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 3,
                            CurrentPrice = 997,
                            Description = "Processeur: S5\n*Écran: Always-On Retina OLED\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 997,
                            IsUsed = false,
                            Name = "Apple Watch Nike",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 3,
                            CurrentPrice = 2747,
                            Description = "Processeur: S5\n*Écran: Always-On Retina OLED\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 2747,
                            IsUsed = false,
                            Name = "Apple Watch Hermès",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 3,
                            CurrentPrice = 3997,
                            Description = "Processeur: S5\n*Écran: Always-On Retina OLED\n*Batterie: Jusqu'à 18 heures\n*Matériau: Or 18 carats",
                            InitialPrice = 3997,
                            IsUsed = false,
                            Name = "Apple Watch Edition",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 3,
                            CurrentPrice = 497,
                            Description = "Processeur: S1\n*Écran: IPS LCD\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 497,
                            IsUsed = false,
                            Name = "Apple Watch SE (1ère génération)",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 3,
                            CurrentPrice = 372,
                            Description = "Processeur: S1\n*Écran: IPS LCD\n*Batterie: Jusqu'à 18 heures",
                            InitialPrice = 372,
                            IsUsed = false,
                            Name = "Apple Watch Series 1",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 1,
                            CurrentPrice = 1997,
                            Description = "Processeur: A15 Bionic\n*RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Double 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 1997,
                            IsUsed = false,
                            Name = "iPhone 14",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 1,
                            CurrentPrice = 2497,
                            Description = "Processeur: A16 Bionic\n*RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 2497,
                            IsUsed = false,
                            Name = "iPhone 14 Pro",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 1,
                            CurrentPrice = 2747,
                            Description = "Processeur: A16 Bionic\n*RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,7 pouces",
                            InitialPrice = 2747,
                            IsUsed = false,
                            Name = "iPhone 14 Pro Max",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 1,
                            CurrentPrice = 2247,
                            Description = "Processeur: A17 Bionic\n*RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Double 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 2247,
                            IsUsed = false,
                            Name = "iPhone 15",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 1,
                            CurrentPrice = 2747,
                            Description = "Processeur: A18 Bionic\n*RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,1 pouces",
                            InitialPrice = 2747,
                            IsUsed = false,
                            Name = "iPhone 15 Pro",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 1,
                            CurrentPrice = 2997,
                            Description = "Processeur: A18 Bionic\n*RAM: 6 Go\n*Stockage: 128 Go, 256 Go, ou 512 Go\n*Appareil photo: Triple 12 MP\n*Écran: 6,7 pouces",
                            InitialPrice = 2997,
                            IsUsed = false,
                            Name = "iPhone 15 Pro Max",
                            StockQuantity = 10
                        });
                });

            modelBuilder.Entity("Entities.ProductColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProductColors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorCode = "#808080",
                            Name = "Gris sidéral"
                        },
                        new
                        {
                            Id = 2,
                            ColorCode = "#C0C0C0",
                            Name = "Argent"
                        },
                        new
                        {
                            Id = 3,
                            ColorCode = "#FFD700",
                            Name = "Or"
                        },
                        new
                        {
                            Id = 4,
                            ColorCode = "#008000",
                            Name = "Vert"
                        },
                        new
                        {
                            Id = 5,
                            ColorCode = "#0000FF",
                            Name = "Bleu"
                        },
                        new
                        {
                            Id = 6,
                            ColorCode = "#FFC0CB",
                            Name = "Rose"
                        },
                        new
                        {
                            Id = 7,
                            ColorCode = "#800080",
                            Name = "Violet"
                        },
                        new
                        {
                            Id = 8,
                            ColorCode = "#FF0000",
                            Name = "Rouge"
                        },
                        new
                        {
                            Id = 9,
                            ColorCode = "#000000",
                            Name = "Blanc"
                        },
                        new
                        {
                            Id = 10,
                            ColorCode = "#FFFFFF",
                            Name = "Noir"
                        });
                });

            modelBuilder.Entity("Entities.ProductColorRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId", "ColorId")
                        .IsUnique();

                    b.ToTable("ProductColorRelations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 5,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            ColorId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            ColorId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 6,
                            ColorId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 7,
                            ColorId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 8,
                            ColorId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 9,
                            ColorId = 6,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 10,
                            ColorId = 5,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 11,
                            ColorId = 7,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 12,
                            ColorId = 8,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 13,
                            ColorId = 1,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 14,
                            ColorId = 2,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 15,
                            ColorId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 16,
                            ColorId = 1,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 17,
                            ColorId = 2,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 18,
                            ColorId = 3,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 19,
                            ColorId = 4,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 20,
                            ColorId = 5,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 21,
                            ColorId = 8,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 22,
                            ColorId = 1,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 23,
                            ColorId = 2,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 24,
                            ColorId = 3,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 25,
                            ColorId = 1,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 26,
                            ColorId = 2,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 27,
                            ColorId = 3,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 28,
                            ColorId = 1,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 29,
                            ColorId = 2,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 30,
                            ColorId = 8,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 31,
                            ColorId = 1,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 32,
                            ColorId = 2,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 33,
                            ColorId = 3,
                            ProductId = 11
                        },
                        new
                        {
                            Id = 34,
                            ColorId = 1,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 35,
                            ColorId = 2,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 36,
                            ColorId = 3,
                            ProductId = 12
                        },
                        new
                        {
                            Id = 37,
                            ColorId = 4,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 38,
                            ColorId = 5,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 39,
                            ColorId = 8,
                            ProductId = 13
                        },
                        new
                        {
                            Id = 40,
                            ColorId = 1,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 41,
                            ColorId = 2,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 42,
                            ColorId = 3,
                            ProductId = 14
                        },
                        new
                        {
                            Id = 43,
                            ColorId = 1,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 44,
                            ColorId = 2,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 45,
                            ColorId = 3,
                            ProductId = 15
                        },
                        new
                        {
                            Id = 46,
                            ColorId = 1,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 47,
                            ColorId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 48,
                            ColorId = 5,
                            ProductId = 16
                        },
                        new
                        {
                            Id = 49,
                            ColorId = 1,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 50,
                            ColorId = 2,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 51,
                            ColorId = 5,
                            ProductId = 17
                        },
                        new
                        {
                            Id = 52,
                            ColorId = 1,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 53,
                            ColorId = 2,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 54,
                            ColorId = 6,
                            ProductId = 18
                        },
                        new
                        {
                            Id = 55,
                            ColorId = 1,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 56,
                            ColorId = 2,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 57,
                            ColorId = 6,
                            ProductId = 19
                        },
                        new
                        {
                            Id = 58,
                            ColorId = 1,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 59,
                            ColorId = 2,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 60,
                            ColorId = 5,
                            ProductId = 20
                        },
                        new
                        {
                            Id = 61,
                            ColorId = 1,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 62,
                            ColorId = 2,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 63,
                            ColorId = 5,
                            ProductId = 21
                        },
                        new
                        {
                            Id = 64,
                            ColorId = 1,
                            ProductId = 22
                        },
                        new
                        {
                            Id = 65,
                            ColorId = 2,
                            ProductId = 22
                        },
                        new
                        {
                            Id = 66,
                            ColorId = 5,
                            ProductId = 22
                        },
                        new
                        {
                            Id = 67,
                            ColorId = 1,
                            ProductId = 23
                        },
                        new
                        {
                            Id = 68,
                            ColorId = 2,
                            ProductId = 23
                        },
                        new
                        {
                            Id = 69,
                            ColorId = 5,
                            ProductId = 23
                        },
                        new
                        {
                            Id = 70,
                            ColorId = 1,
                            ProductId = 24
                        },
                        new
                        {
                            Id = 71,
                            ColorId = 2,
                            ProductId = 24
                        },
                        new
                        {
                            Id = 72,
                            ColorId = 5,
                            ProductId = 24
                        },
                        new
                        {
                            Id = 73,
                            ColorId = 1,
                            ProductId = 25
                        },
                        new
                        {
                            Id = 74,
                            ColorId = 2,
                            ProductId = 25
                        },
                        new
                        {
                            Id = 75,
                            ColorId = 6,
                            ProductId = 25
                        },
                        new
                        {
                            Id = 76,
                            ColorId = 1,
                            ProductId = 26
                        },
                        new
                        {
                            Id = 77,
                            ColorId = 2,
                            ProductId = 26
                        },
                        new
                        {
                            Id = 78,
                            ColorId = 6,
                            ProductId = 26
                        },
                        new
                        {
                            Id = 79,
                            ColorId = 1,
                            ProductId = 27
                        },
                        new
                        {
                            Id = 80,
                            ColorId = 2,
                            ProductId = 27
                        },
                        new
                        {
                            Id = 81,
                            ColorId = 6,
                            ProductId = 27
                        },
                        new
                        {
                            Id = 82,
                            ColorId = 1,
                            ProductId = 28
                        },
                        new
                        {
                            Id = 83,
                            ColorId = 2,
                            ProductId = 28
                        },
                        new
                        {
                            Id = 84,
                            ColorId = 6,
                            ProductId = 28
                        },
                        new
                        {
                            Id = 85,
                            ColorId = 1,
                            ProductId = 29
                        },
                        new
                        {
                            Id = 86,
                            ColorId = 2,
                            ProductId = 29
                        },
                        new
                        {
                            Id = 87,
                            ColorId = 5,
                            ProductId = 29
                        },
                        new
                        {
                            Id = 88,
                            ColorId = 1,
                            ProductId = 30
                        },
                        new
                        {
                            Id = 89,
                            ColorId = 2,
                            ProductId = 30
                        },
                        new
                        {
                            Id = 90,
                            ColorId = 5,
                            ProductId = 30
                        },
                        new
                        {
                            Id = 91,
                            ColorId = 1,
                            ProductId = 31
                        },
                        new
                        {
                            Id = 92,
                            ColorId = 2,
                            ProductId = 31
                        },
                        new
                        {
                            Id = 93,
                            ColorId = 5,
                            ProductId = 31
                        },
                        new
                        {
                            Id = 94,
                            ColorId = 1,
                            ProductId = 32
                        },
                        new
                        {
                            Id = 95,
                            ColorId = 2,
                            ProductId = 32
                        },
                        new
                        {
                            Id = 96,
                            ColorId = 5,
                            ProductId = 32
                        },
                        new
                        {
                            Id = 97,
                            ColorId = 1,
                            ProductId = 33
                        },
                        new
                        {
                            Id = 98,
                            ColorId = 2,
                            ProductId = 33
                        },
                        new
                        {
                            Id = 99,
                            ColorId = 5,
                            ProductId = 33
                        },
                        new
                        {
                            Id = 100,
                            ColorId = 1,
                            ProductId = 34
                        },
                        new
                        {
                            Id = 101,
                            ColorId = 2,
                            ProductId = 34
                        },
                        new
                        {
                            Id = 102,
                            ColorId = 6,
                            ProductId = 34
                        },
                        new
                        {
                            Id = 103,
                            ColorId = 1,
                            ProductId = 35
                        },
                        new
                        {
                            Id = 104,
                            ColorId = 2,
                            ProductId = 35
                        },
                        new
                        {
                            Id = 105,
                            ColorId = 6,
                            ProductId = 35
                        },
                        new
                        {
                            Id = 106,
                            ColorId = 1,
                            ProductId = 36
                        },
                        new
                        {
                            Id = 107,
                            ColorId = 2,
                            ProductId = 36
                        },
                        new
                        {
                            Id = 108,
                            ColorId = 6,
                            ProductId = 36
                        },
                        new
                        {
                            Id = 109,
                            ColorId = 1,
                            ProductId = 37
                        },
                        new
                        {
                            Id = 110,
                            ColorId = 2,
                            ProductId = 37
                        },
                        new
                        {
                            Id = 111,
                            ColorId = 6,
                            ProductId = 37
                        },
                        new
                        {
                            Id = 112,
                            ColorId = 1,
                            ProductId = 38
                        },
                        new
                        {
                            Id = 113,
                            ColorId = 2,
                            ProductId = 38
                        },
                        new
                        {
                            Id = 114,
                            ColorId = 6,
                            ProductId = 38
                        },
                        new
                        {
                            Id = 115,
                            ColorId = 1,
                            ProductId = 39
                        },
                        new
                        {
                            Id = 116,
                            ColorId = 2,
                            ProductId = 39
                        },
                        new
                        {
                            Id = 117,
                            ColorId = 6,
                            ProductId = 39
                        },
                        new
                        {
                            Id = 118,
                            ColorId = 1,
                            ProductId = 40
                        },
                        new
                        {
                            Id = 119,
                            ColorId = 2,
                            ProductId = 40
                        },
                        new
                        {
                            Id = 120,
                            ColorId = 6,
                            ProductId = 40
                        },
                        new
                        {
                            Id = 121,
                            ColorId = 3,
                            ProductId = 41
                        },
                        new
                        {
                            Id = 122,
                            ColorId = 4,
                            ProductId = 41
                        },
                        new
                        {
                            Id = 123,
                            ColorId = 7,
                            ProductId = 41
                        },
                        new
                        {
                            Id = 124,
                            ColorId = 3,
                            ProductId = 42
                        },
                        new
                        {
                            Id = 125,
                            ColorId = 4,
                            ProductId = 42
                        },
                        new
                        {
                            Id = 126,
                            ColorId = 7,
                            ProductId = 42
                        },
                        new
                        {
                            Id = 127,
                            ColorId = 3,
                            ProductId = 43
                        },
                        new
                        {
                            Id = 128,
                            ColorId = 4,
                            ProductId = 43
                        },
                        new
                        {
                            Id = 129,
                            ColorId = 7,
                            ProductId = 43
                        },
                        new
                        {
                            Id = 130,
                            ColorId = 3,
                            ProductId = 44
                        },
                        new
                        {
                            Id = 131,
                            ColorId = 4,
                            ProductId = 44
                        },
                        new
                        {
                            Id = 132,
                            ColorId = 7,
                            ProductId = 44
                        },
                        new
                        {
                            Id = 133,
                            ColorId = 3,
                            ProductId = 45
                        },
                        new
                        {
                            Id = 134,
                            ColorId = 4,
                            ProductId = 45
                        },
                        new
                        {
                            Id = 135,
                            ColorId = 7,
                            ProductId = 45
                        },
                        new
                        {
                            Id = 136,
                            ColorId = 3,
                            ProductId = 46
                        },
                        new
                        {
                            Id = 137,
                            ColorId = 4,
                            ProductId = 46
                        },
                        new
                        {
                            Id = 138,
                            ColorId = 7,
                            ProductId = 46
                        });
                });

            modelBuilder.Entity("Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("longblob");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 75,
                            ImageUrl = "https://www.verizon.com/about/sites/default/files/news-media/1-iPhone8%20Hero%20Image%201280x720.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 76,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2Su2dF_uVR6gxMqGTwF5oNqfC-nNbNr1FPA&s",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 77,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQSVS0yWHhpnJwXXD97yeIk3HLxmZ5KmX2dbA&s",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 78,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQxOvmabrpeSSURrxlDWgaPZiYzyOymaotQfg&s",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 79,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQZfi2tJGMRmyidpMge5igBYVyfXP9jKext0g&s",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 80,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSVMn3tliykuwEUu2cG1ySZWR_scQC78AOSoQ&s",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 81,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQFML6WTAfSUh9_iNMyPTIu4vSPs5MMAxqFLQ&s",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 82,
                            ImageUrl = "https://www.zeekonline.co.za/cdn/shop/products/2715_grande.jpg?v=1558796283",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 83,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS1ZU0mSC30v87rsIBETV08b_A7djxvFB9Kxg&s",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 84,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRxMmri614mHixf7y_Ij5TH-B5N41gpmtLVhQ&s",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 85,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQIGic3LMgDqbq78Z4u639yd-dCd3NF6F4UPA&s",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 86,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRl0B53c4RnYzIdJIibkcsUn6EkiiyerHSusQ&s",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 87,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS90yDKSTVSy2EAu8p6JWJ9JvnJshxzOFrDeQ&s",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 88,
                            ImageUrl = "https://m.media-amazon.com/images/I/51shRjAr+WL._AC_UF894,1000_QL80_.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 89,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0HyZLFDIAnLfDOjgB0OrkXt3GrvC7QcELbQ&s",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 90,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTWCpzH4kFjK7H00sSDc3sQhvMw1Gx2yeL4Qg&s",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 91,
                            ImageUrl = "https://spacenet.tn/39176-large_default/iphone-11-pro-64-go-gold.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 92,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRnySGS0JvfSzEhU8GPPvCd3q6WAxEjthQ7RA&s",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 93,
                            ImageUrl = "https://www.apple.com/newsroom/images/product/iphone/standard/Apple_iPhone-11-Pro_Matte-Glass-Back_091019_big.jpg.large.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 94,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRJCrSkNLXOoHtOzlkuFbbMRW7BfTVq5_BOmA&s",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 95,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSU-5e4iGig3YjL4R8hdCPiNcRUhsOMizmjYw&s",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 96,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ70uO5PfBU3FDskFySMN6dxkcw8_h1LkAgAg&s",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 97,
                            ImageUrl = "https://cdn.lesnumeriques.com/optim/product/59/59901/34105c50-iphone-12__450_400.jpeg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 98,
                            ImageUrl = "https://ee.co.uk/medias/iphone-12-5g-64gb-purple-desktop-detail-1-WebP-Format-488?context=bWFzdGVyfHJvb3R8ODI3OHxpbWFnZS93ZWJwfHN5cy1tYXN0ZXIvcm9vdC9oYzkvaDFiLzk4ODc1MDM5MDg4OTQvaXBob25lLTEyLTVnLTY0Z2ItcHVycGxlLWRlc2t0b3AtZGV0YWlsLTFfV2ViUC1Gb3JtYXQtNDg4fDVkN2FlNDE5OWQ0MmU4NjE3NmI3NzVmZDk0YzI3ZWUxMTcwMGIwYjBhOTc5NTdlNzE2NmUwN2ZjNjY2OWY5ZDA",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 99,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdBH-cHAeod-2YbGAQdOz3ATHyNKC6Fhbp7A&s",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 100,
                            ImageUrl = "https://www.mega.tn/assets/uploads/img/pr_telephonie_mobile/1615906971_363.jpeg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 101,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSYUOFQVbzRNuO7MoXI5_WyYbarF2QE7H15pw&s",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 102,
                            ImageUrl = "https://cdn.dxomark.com/wp-content/uploads/medias/post-61584/iphone-12-pro-max-graphite-hero.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 103,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQxaVRjp9pB5dI2pdANtX80tdg4zLXz05Ewuw&s",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 104,
                            ImageUrl = "https://www.apple.com/newsroom/images/product/iphone/geo/Apple_iphone13_colors_geo_09142021_big.jpg.small.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 105,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQBgzRwxJ7qp9auLsjGvtnxl6EaDpLgc-_Apg&s",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 106,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ1OsFNeZpeISgl0dWMl9Yjubr-MIOvJsNlMA&s",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 107,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT41oM9lJ9XVYPjrthmaJKF6Kf7A9hUEVWq_Q&s",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 108,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTy4ttV98BCDt-5pnYfVYQmiR4No2lNbANYxw&s",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 109,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6lBAgMn_PUKUweDIj8IBTnoznbJmskNCP2A&s",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 110,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTcMjbMBL5v9Afqw1oGFyq5JNE_8oTE5oIjGw&s",
                            ProductId = 41
                        },
                        new
                        {
                            Id = 111,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRf9cwe59EKYaLh7hltnW9aF_m_1_CMNAIU3w&s",
                            ProductId = 41
                        },
                        new
                        {
                            Id = 112,
                            ImageUrl = "https://cdsassets.apple.com/live/SZLF0YNV/images/sp/111846_sp875-sp876-iphone14-pro-promax.png",
                            ProductId = 42
                        },
                        new
                        {
                            Id = 113,
                            ImageUrl = "https://mk-media.mytek.tn/media/catalog/product/cache/8be3f98b14227a82112b46963246dfe1/a/1/a13-black4_371_1.jpg",
                            ProductId = 42
                        },
                        new
                        {
                            Id = 114,
                            ImageUrl = "https://www.sws-informatique.tn/wp-content/uploads/2023/01/iphone14pro.webp",
                            ProductId = 43
                        },
                        new
                        {
                            Id = 115,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSOEPzXrWKRRHe7komHi6aHsItFbQEGxm07Rw&s",
                            ProductId = 43
                        },
                        new
                        {
                            Id = 116,
                            ImageUrl = "https://www.cnet.com/a/img/resize/e21b3371c11612c4e14928a6a237e7b0889745f8/hub/2023/09/12/2d9d37cc-7d99-4f81-8da2-8f3a674f4243/screenshot-2023-09-12-at-10-38-30-am.png?auto=webp&width=1200",
                            ProductId = 44
                        },
                        new
                        {
                            Id = 117,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcStT7XTFitwSMRrlMzyUqTzgC1xImLE0Hd2FA&s",
                            ProductId = 44
                        },
                        new
                        {
                            Id = 118,
                            ImageUrl = "https://www.apple.com/v/iphone-15-pro/c/images/specs/hero_iphone_pro_max__bsan8nevcgty_large.jpg",
                            ProductId = 45
                        },
                        new
                        {
                            Id = 119,
                            ImageUrl = "https://www.apple.com/newsroom/images/2023/09/apple-unveils-iphone-15-pro-and-iphone-15-pro-max/article/Apple-iPhone-15-Pro-lineup-hero-230912_Full-Bleed-Image.jpg.large.jpg",
                            ProductId = 45
                        },
                        new
                        {
                            Id = 120,
                            ImageUrl = "https://www.apple.com/v/iphone-15-pro/c/images/specs/hero_iphone_pro_max__bsan8nevcgty_large.jpg",
                            ProductId = 46
                        },
                        new
                        {
                            Id = 121,
                            ImageUrl = "https://imageio.forbes.com/specials-images/imageserve/641397e79f04500b85460b8f/Apple--iPhone-15--iPhone-15-Pro-Max--iPhone-15-Pro--iPhone-15-Pro-design--iPhone-15/0x0.jpg?format=jpg&crop=961,721,x344,y2,safe&width=960",
                            ProductId = 46
                        },
                        new
                        {
                            Id = 122,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbkJHZhFO6U7pqP4rIeFPwKE9wSmP-G_D_Yg&s",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 123,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRypnoeae3Q5ACwvSmfGdYtW8etvo_4UbPbPw&s",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 124,
                            ImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/macbook-air-space-gray-select-201810?wid=904&hei=840&fmt=jpeg&qlt=90&.v=1633027804000",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 125,
                            ImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/mbp16-spacegray-select-202110?wid=904&hei=840&fmt=jpeg&qlt=90&.v=1632788124000",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 126,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSOs0Ee2UM2pSdlKR-dLp0seRHomx0UnPIj_w&s",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 127,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTipFhDl9U0Was0zKFHh8vDExcEe87kT-Oi9g&s",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 128,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQUoxDh4p_6NU5f2EHOkv91EM-JCePGZ3QyEg&s",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 129,
                            ImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/mac-mini-hero-202011?wid=904&hei=840&fmt=jpeg&qlt=90&.v=1617472404000",
                            ProductId = 21
                        },
                        new
                        {
                            Id = 130,
                            ImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/imac-24-blue-selection-hero-202104?wid=904&hei=840&fmt=jpeg&qlt=90&.v=1617472222000",
                            ProductId = 22
                        },
                        new
                        {
                            Id = 131,
                            ImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/mac-studio-hero-202203?wid=904&hei=840&fmt=jpeg&qlt=90&.v=1647052906174",
                            ProductId = 23
                        },
                        new
                        {
                            Id = 132,
                            ImageUrl = "https://imageio.forbes.com/specials-images/imageserve/65282b8ed61a31651ccb438e/14-inch-Macbook-Pro/960x0.jpg?height=473&width=711&fit=bounds",
                            ProductId = 24
                        },
                        new
                        {
                            Id = 133,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQwY58M-dvmyhpLVfYDjnpwlrX8rhZymjaGhA&s",
                            ProductId = 25
                        },
                        new
                        {
                            Id = 134,
                            ImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/mbp16-spacegray-select-202110?wid=904&hei=840&fmt=jpeg&qlt=90&.v=1632788124000",
                            ProductId = 26
                        },
                        new
                        {
                            Id = 135,
                            ImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/mbp16-spacegray-select-202110?wid=904&hei=840&fmt=jpeg&qlt=90&.v=1632788124000",
                            ProductId = 27
                        },
                        new
                        {
                            Id = 136,
                            ImageUrl = "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/macbook-air-space-gray-select-201810?wid=904&hei=840&fmt=jpeg&qlt=90&.v=1633027804000",
                            ProductId = 28
                        },
                        new
                        {
                            Id = 137,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQi7xsTCI2iH227YfV2OopTu5qP7ImLJeK0SQ&s",
                            ProductId = 29
                        },
                        new
                        {
                            Id = 138,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTOaDYCVhEiigu-fiOVgSHG1_QobV8IPyabdg&s",
                            ProductId = 30
                        },
                        new
                        {
                            Id = 139,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTquL0fiDP7lgzrcarir4TQVbfSpxmGSt6AqQ&s",
                            ProductId = 31
                        },
                        new
                        {
                            Id = 140,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQ4s_J5wplcKA8HGzOT0IGFSbsDI5v3BI6LA&s",
                            ProductId = 32
                        },
                        new
                        {
                            Id = 141,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQ4s_J5wplcKA8HGzOT0IGFSbsDI5v3BI6LA&s",
                            ProductId = 33
                        },
                        new
                        {
                            Id = 142,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQ4s_J5wplcKA8HGzOT0IGFSbsDI5v3BI6LA&s",
                            ProductId = 34
                        },
                        new
                        {
                            Id = 143,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2X-T6MGSDMd7CJF2ViDBs9f0vARbPoe7TlQ&s",
                            ProductId = 35
                        },
                        new
                        {
                            Id = 144,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2X-T6MGSDMd7CJF2ViDBs9f0vARbPoe7TlQ&s",
                            ProductId = 36
                        },
                        new
                        {
                            Id = 145,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_RLPxwGu3V2h2Zg_pfl8J9XznIGAiAv6ErA&s",
                            ProductId = 37
                        },
                        new
                        {
                            Id = 146,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_RLPxwGu3V2h2Zg_pfl8J9XznIGAiAv6ErA&s",
                            ProductId = 38
                        },
                        new
                        {
                            Id = 147,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR2X-T6MGSDMd7CJF2ViDBs9f0vARbPoe7TlQ&s",
                            ProductId = 39
                        },
                        new
                        {
                            Id = 148,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_RLPxwGu3V2h2Zg_pfl8J9XznIGAiAv6ErA&s",
                            ProductId = 40
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "USER",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("points")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("Entities.Command", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany("payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Favoris", b =>
                {
                    b.HasOne("Entities.Product", "Product")
                        .WithMany("Favoris")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", "User")
                        .WithMany("Favoris")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Notification", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.HasOne("Entities.Command", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.HasOne("Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entities.ProductColorRelation", b =>
                {
                    b.HasOne("Entities.ProductColor", "ProductColor")
                        .WithMany("ProductColorRelations")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Product", "Product")
                        .WithMany("ProductColorRelations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductColor");
                });

            modelBuilder.Entity("Entities.ProductImage", b =>
                {
                    b.HasOne("Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Command", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Navigation("Favoris");

                    b.Navigation("Images");

                    b.Navigation("Orders");

                    b.Navigation("ProductColorRelations");
                });

            modelBuilder.Entity("Entities.ProductColor", b =>
                {
                    b.Navigation("ProductColorRelations");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Favoris");

                    b.Navigation("Notifications");

                    b.Navigation("payments");
                });
#pragma warning restore 612, 618
        }
    }
}
